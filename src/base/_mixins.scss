/**
 * Base: mixins
 */

/* Imports */

@use "sass:map";
@use "sass:string";
@use "../config" as con;
@use "../functions" as func;

/**
 * Set root variables
 */

@mixin set-root() {
  $props: ();

  @each $r in con.$root {
    @if $r == "colors" {
      @each $c, $v in con.$colors-flat {
        --#{$c}: #{$v};
      }
    } @else if $r == "fonts" {
      @each $f, $v in con.$fonts {
        --font-#{$f}: #{$v};
      }
    } @else if $r == "font-weights" {
      @each $f, $v in con.$font-weights {
        --font-weight-#{$f}: #{$v};
      }
    } @else if $r == "padding-vertical" {
      @each $p, $v in con.$padding-vertical {
        --pv-#{$p}: #{$v};
      }
    } @else if $r == "padding-horizontal" {
      @each $p, $v in con.$padding-horizontal {
        --ph-#{$p}: #{$v};
      }
    } @else if $r == "gap" {
      --gap: 0;
      --gap-margin: 0;
    } @else if $r == "containers" {
      @each $c, $v in con.$containers {
        $suffix: "";

        @if $c != "default" {
          $suffix: "-#{$c}";
        }

        --container#{$suffix}: #{func.calc-rem(con.$containers)};
      }
    } @else if $r == "container-padding" {
      --container-padding: #{func.calc-rem(con.$container-padding)};
    } @else if $r == "aspect-ratio-padding" {
      --aspect-ratio-padding: 100%;
    } @else if $r == "transitions" {
      --prop: #{con.$default-prop};
      --duration: #{con.$default-duration};
      --easing: #{con.$default-easing};
      --delay: #{con.$default-delay};
    } @else if $r == "outline" {
      $default-color: map.get(con.$outline, "color");

      --outline-width: #{map.get(con.$outline, "width")};
      --outline-color: var(--#{$default-color});
      --outline-offset: #{map.get(con.$outline, "offset")};
    } @else if $r == "borders" {
      $default-color: map.get(con.$borders, "colors", "default");

      --border-color: var(--#{$default-color});
      --border-width: #{map.get(con.$borders, "width", "default")};
    }
  }
}
