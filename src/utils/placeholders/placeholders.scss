/**
 * Utils - Placeholders Styles
 */

/* Imports */

@use "sass:map";
@use "sass:meta";
@use "sass:string";

/**
 * Mixin - set placeholder
 *
 * @param {string} $name
 * @return {void}
 */

@mixin placeholder-set($name) {
  %u-#{$name} {
    @content;
  }
}

/**
 * Mixin - make placeholder
 *
 * @param {map} $map
 * @return {void}
 */

@mixin placeholder-make($map) {
  $name: map.get($map, "name");
  $prop: map.get($map, "prop");
  $selector: map.get($map, "selector");

  @if $selector {
    %u-#{$name} {
      #{$selector} {
        @each $key, $value in $prop {
          @if meta.type-of($value) == string and $name != "content-empty" {
            #{$key}: string.unquote($value);
          } @else {
            #{$key}: $value;
          }
        }
      }
    }
  } @else {
    %u-#{$name} {
      @each $key, $value in $prop {
        @if meta.type-of($value) == string and $name != "content-empty" {
          #{$key}: string.unquote($value);
        } @else {
          #{$key}: $value;
        }
      }
    }
  }
}
