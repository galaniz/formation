/**
 * Utils: functions recursively set nested map
 */

/* Imports */

@use "sass:map";
@use "sass:meta";

/**
 * Function
 *
 * Source: https://github.com/pentzzsolt/sass-recursive-map.merge
 *
 * @param {map} $parent-map
 * @param {map} $child-map
 * @return {map}
 */

@function map-recursive-merge($parent-map, $child-map) {
  $result: $parent-map;

  @each $key, $value in $child-map {
    $has-key: map.has-key($result, $key);
    $res: map.get($result, $key);
    $type-res: meta.type-of($res);
    $type-val: meta.type-of($value);

    @if not $has-key or meta.type-of($res) != $type-val or not ($type-res == map and $type-val == map) {
      $result: map.merge($result, ($key: $value));
    } @else {
      $result: map.merge($result, ($key: map-recursive-merge(map.get($result, $key), $value)));
    }
  }

  @return $result;
}
