
/*
 * Imports
 * -------
 */

@use 'sass:map';
@use 'sass:meta';

/* 
 * Get nested map
 * --------------
 *
 * @param [map] $map
 * @param [list] $keys
 *
 * @return [map]
 */

@function mapDeepGet( $map, $keys... ) {
  @each $key in $keys {
  	$map: map.get( $map, $key );
  }
  
  @return $map;
}

/* 
 * Recursively set nested map
 * --------------------------
 *
 * @param [map] $parentMap
 * @param [map] $childMap
 *
 * source: https://github.com/pentzzsolt/sass-recursive-map.merge
 *
 * @return [map]
 */

@function mapRecursiveMerge( $parentMap, $childMap ) {
	$result: $parentMap;
	
	@each $key, $value in $childMap {
		@if( not map.has-key( $result, $key ) ) or ( meta.type-of( map.get( $result, $key ) ) != meta.type-of( $value ) ) or ( not ( meta.type-of( map.get( $result, $key ) ) == map and meta.type-of( $value ) == map ) ) {
			$result: map.merge( $result, ( $key: $value ) );
		} @else {
			$result: map.merge( $result, ( $key: mapRecursiveMerge( map.get( $result, $key ), $value ) ) );
		}
	}

	@return $result;
}
