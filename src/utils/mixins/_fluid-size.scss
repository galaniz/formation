
/*
 * Fluid sizes ( font-size, padding, margins... )
 * ----------------------------------------------
 *
 * @param [number] $minVW
 * @param [number] $maxVW
 * @param [number] $minSize
 * @param [number] $maxSize
 */

@mixin fluidSize( $prop, $sizes, $widths, $important: false, $otherValues: null ) {
  $lastIndex: length( $sizes );

  @each $s in $sizes {
    $i: index( $sizes, $s );
    $w: nth( $widths, $i );
    $ww: calcRem( map-get( $g-breakpoints, nth( $widths, $i ) ) );
    $o: null;
    $m: null;

    @if type-of( $otherValues ) == 'list' {
      $o: nth( $widths, $i );
    }

    @if $important {
      $m: #{'!important'};
    }

    @if $i == 1 {
      #{$prop}: $s $o $m;
    }

    @if $i == $lastIndex {
      @include breakpointMin( $w ) {
        #{$prop}: $s $o $m;
      }
    } @else {
      $nextS: nth( $sizes, $i + 1 );
      $nextW: nth( $widths, $i + 1 );
      $nextWw: calcRem( map-get( $g-breakpoints, nth( $widths, $i + 1 ) ) );

      @include breakpointMin( $w ) {
        #{$prop}: calc( #{ $s } + ( ( 100vw - #{ $ww } ) / ( #{ stripUnit( $nextWw ) } - #{ stripUnit( $ww ) } ) ) * ( #{ stripUnit( $nextS ) } - #{ stripUnit( $s ) } ) ) $o $m;
      }
    }
  }
}
