
/*
 * Imports
 * -------
 */

@use 'sass:map';
@use '../../config' as con;
@use '../functions/calc-rem-em' as c;

/* 
 * Min media query
 * ---------------
 *
 * @param [string/number] $min
 */

@mixin breakpointMin( $min ) { 
	@if map.has-key( con.$breakpoints, $min ) {
		$bkRem: c.calcRem( map.get( con.$breakpoints, $min ) );

		@media only screen and ( min-width: #{ $bkRem } ) {
			@content;
		}
	} @else {
		@warn "#{$min} does not exist in breakpoints map.";
	}
}

/* 
 * Max media query
 * ---------------
 *
 * @param [string/number] $max
 */

@mixin breakpointMax( $max ) {
	@if map.has-key( con.$breakpoints, $max ) {
		$bkRem: c.calcRem( map.get( con.$breakpoints, $max ) );

		@media only screen and ( max-width: #{ $bkRem } ) {
			@content;
		}
	} @else {
		@warn "#{$max} does not exist in breakpoints map.";
	}
}

/* 
 * Min/max media query
 * -------------------
 *
 * @param [string/number] $min
 * @param [string/number] $max
 */

@mixin breakpointMinMax( $min, $max ) { 
	@if map.has-key( con.$breakpoints, $min ) and map.has-key( con.$breakpoints, $max ) {
		$bkMinRem: c.calcRem( map.get( con.$breakpoints, $min ) );
		$bkMaxRem: c.calcRem( map.get( con.$breakpoints, $max ) );

		@media only screen and ( max-width: #{ $bkMaxRem } ) and ( min-width: #{ $bkMinRem } ) {
			@content;
		}
	} @else {
		@warn "#{$min} and/or #{$max} does not exist in breakpoints map.";
	}
}
