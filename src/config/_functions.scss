/**
 * Config - functions
 */

/* Imports */

@use "sass:map";
@use "sass:meta";

/**
 * Function - convert map to one level map
 *
 * @param {map} $map
 * @param {map} $new-map
 * @param {string} $prefix
 * @param {null|string} $new-prefix
 * @return {map}
 */

@function map-flatten($map, $new-map, $prefix: "", $new-prefix: null) {
  @each $key, $value in $map {
    @if meta.type-of($value) == map {
      $n-prefix: "#{$key}";

      @if $new-prefix {
        $k: "#{$key}";

        @if $key != "" {
          $k: "-#{$key}";
        }

        @if $key == def {
          $k: "";
        }

        $n-prefix: "#{$new-prefix}#{$k}";
      }

      $new-map: map-flatten($value, $new-map, $prefix, $n-prefix);
    } @else {
      $new-key: "#{$key}";

      @if $prefix != "" {
        $new-key: "#{$prefix}-#{$key}";
      }

      @if $new-prefix {
        @if $prefix != "" {
          $new-key: "#{$prefix}-#{$new-prefix}-#{$key}";
        } @else {
          $new-key: "#{$new-prefix}-#{$key}";
        }
      }

      $new-map: map.merge($new-map, ($new-key: $value));
    }
  }

  $new-map: map.merge($new-map, $new-map);

  @return $new-map;
}
