/**
 * Config
 */

/* Imports */

@use "sass:map";
@use "sass:list";
@use "sass:string";
@use "functions" as func;
@use "mixins" as mix;
@use "../utils/functions/map" as m;

/* Root */

$root: (
  "colors",
  "font-families",
  "font-weights",
  "letter-spacing",
  "line-heights",
  "spacing",
  "gap",
  "containers",
  "container-padding",
  "aspect-ratio-padding",
  "transitions",
  "outline",
  "borders",
  "border-radius",
) !default;

/* Rem context */

$context: 16px !default;

/* Store custom variables */

$vars: () !default;

/* Colors  */

$colors: (
  "primary": (
    "base": #888,
    "light": #aaa,
    "dark": #666,
  ),
  "foreground": (
    "base": #222,
    "light": #444,
    "dark": #000,
  ),
  "background": (
    "base": #f8f8f8,
    "light": #fff,
    "dark": #eee,
  ),
) !default;

/* Flatten colors to one level map */

$colors-flat-prefix: func.map-flatten($colors, (), "color");

/* Flatten colors to one level map without prefix */

$colors-flat: func.map-flatten($colors, (), "");

/* Text colors */

$text-colors: () !default;

/* Background colors */

$background-colors: () !default;

/* Fonts families  */

$font-families: (
  "primary": (
    helvetica,
    arial,
    sans-serif,
  ),
) !default;

/* Font weights */

$font-weights: (
  "normal": 400,
) !default;

/* Line heights */

$line-heights: () !default;

/* Letter spacing */

$letter-spacing: () !default;

/* Nav */

$nav: (
  "icon": (
    "width": 40px,
    "line-width": 2px,
    "margin": 8px,
  )
) !default;

/* Breakpoints */

$breakpoints: (
  "0": 0px,
  "xs": 300px,
  "s": 600px,
  "m": 900px,
  "l": 1200px,
) !default;

/* Containers and padding */

$containers: ( "default": 1300px ) !default;
$container-padding: 20px !default;

/* Append containers to breakpoints */

@each $c, $width in $containers {
  $suffix: "";

  @if $c != "default" {
    $suffix: "-#{$c}";
  }

  $breakpoints: map.merge(( "container#{$suffix}": $width ), $breakpoints);
  $breakpoints: map.merge(( "container#{$suffix}-no-padding": $width - ($container-padding * 2) ), $breakpoints);
}

/* Spacing */

$spacing: (
  "s": 8px,
  "m": 16px,
  "l": 24px,
) !default;

/* Width percentages */

$width-percentages: (
  "1-1": 100%,
  "4-5": 80%,
  "3-4": 75%,
  "2-3": 66.667%,
  "3-5": 60%,
  "1-2": 50%,
  "2-5": 40%,
  "1-3": 33.333%,
  "1-4": 25%,
  "1-5": 20%
) !default;
$width-percentage-breakpoints: () !default;

/* Widths */

$widths: () !default;
$width-breakpoints: () !default;

/* Max widths */

$max-widths: () !default;
$max-width-breakpoints: () !default;

/* Heights */

$heights: () !default;
$height-breakpoints: () !default;

/* Padding */

$padding-top: () !default;
$padding-bottom: () !default;
$padding-vertical-breakpoints: () !default;
$padding-left: () !default;
$padding-right: () !default;
$padding-horizontal-breakpoints: () !default;

/* Margin */

$margin-top: () !default;
$margin-bottom: () !default;
$margin-bottom-all: () !default;
$margin-vertical-breakpoints: () !default;
$margin-left: () !default;
$margin-right: () !default;
$margin-horizontal-breakpoints: () !default;

/* Gap */

$gaps: () !default;
$gap-breakpoints: () !default;

/* Flex */

$flex-row-breakpoints: () !default;
$flex-column-breakpoints: () !default;

/* Aspect ratio padding */

$aspect-ratio-padding: () !default;
$aspect-ratio-padding: m.map-recursive-merge(
  (
    "100": 100%
  ),
  $aspect-ratio-padding
);

/* Transitions */

$transitions: () !default;
$transitions: m.map-recursive-merge(
  (
    "default": (
      "prop": (color, background, border-color, opacity, transform),
      "duration": 300ms,
      "easing": "ease-in-out",
      "delay": 0ms,
    ),
  ),
  $transitions
);

/* Default transition */

$default-prop: map.get($transitions, "default", "prop");
$default-duration: map.get($transitions, "default", "duration");
$default-easing: map.get($transitions, "default", "easing");
$default-delay: map.get($transitions, "default", "delay");

/* Collapsible transition */

$collapsible-prop: visibility, height;
$collapsible-duration: 0ms, #{$default-duration};
$collapsible-delay: #{$default-duration}, 10ms;
$collapsible-delay-expanded: 10ms, 0ms;

/* Loader transition */

$loader-prop: visibility, opacity;
$loader-duration: 0ms, #{$default-duration};
$loader-delay: #{$default-duration}, 0ms;
$loader-delay-show: 0ms, 10ms;

/* Page transition */

$page-transition-prop: visibility, opacity;
$page-transition-duration: 0ms, #{$default-duration};
$page-transition-easing: #{$default-easing};
$page-transition-delay: #{$default-duration}, 10ms;
$page-transition-delay-show: 10ms, 0ms;

/* Modal transition */

$modal-prop: visibility;
$modal-duration: 0ms;
$modal-delay: #{$default-duration};
$modal-delay-open: 10ms;
$modal-overlay-window-prop: visibility, opacity;
$modal-overlay-window-duration: 0ms, #{$default-duration};
$modal-overlay-window-delay: #{$default-duration}, 10ms;
$modal-overlay-window-delay-open: 10ms, 0ms;

/* Z index */

$z-index: () !default;
$z-index: m.map-recursive-merge(
  (
    "skip-link": 100,
    "page-transition": 100,
    "modal": 90,
    "nav": 85,
    "loader": 80,
  ),
  $z-index
);

/* Outline */

$outline: () !default;
$outline: m.map-recursive-merge(
  (
    "widths": (
      "default": 0.25rem
    ),
    "colors": (
      "default": "var(--primary-dark)"
    ),
    "offsets": (
      "default": 0.25rem,
      "snug": 0,
      "tight": -0.25rem
    ),
    "none": false,
  ),
  $outline
);

/* Borders */

$borders: () !default;
$borders: m.map-recursive-merge(
  (
    "sides": (
      "all",
      "top",
      "left",
      "right",
      "bottom",
    ),
    "colors": (
      "default": currentcolor,
    ),
    "widths": (
      "default": 0.0625rem,
    ),
  ),
  $borders
);

/* Border radius */

$border-radius: () !default;
$border-radius-breakpoints: () !default;

/* Placeholders */

$placeholders: () !default;

@each $p in $placeholders {
  @include mix.make-placeholder($p);
}

@include mix.set-placeholder("visually-hidden") {
  position: absolute;
  overflow: hidden;
  width: 0.0625rem;
  height: 0.0625rem;
  margin: -0.0625rem;
  clip: rect(0, 0, 0, 0);
}

@include mix.set-placeholder("touch-50") {
  &::before {
    content: "";
    position: absolute;
    transform: translate(-50%, -50%);
    width: 3.125rem;
    height: 3.125rem;
    top: 50%;
    left: 50%;
  }
}
