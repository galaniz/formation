/**
 * Config
 */

/* Imports */

@use "sass:map";
@use "sass:list";
@use "sass:string";
@use "functions" as func;
@use "mixins" as mix;
@use "../utils/functions/map" as m;

/* Root */

$root: (
  "colors",
  "font-families",
  "font-weights",
  "spacing",
  "gap",
  "containers",
  "container-padding",
  "aspect-ratio-padding",
  "transitions",
  "outline",
  "borders",
  "border-radius",
) !default;

/* Rem context */

$context: 16px !default;

/* Store custom variables */

$vars: () !default;

/* Colors  */

$colors: (
  "primary": (
    "base": #888,
    "light": #aaa,
    "dark": #666,
  ),
  "foreground": (
    "base": #222,
    "light": #444,
    "dark": #000,
  ),
  "background": (
    "base": #f8f8f8,
    "light": #fff,
    "dark": #eee,
  ),
) !default;

/* Flatten colors to one level map */

$colors-flat-prefix: func.map-flatten($colors, (), "color");

/* Flatten colors to one level map without prefix */

$colors-flat: func.map-flatten($colors, (), "");

/* Text colors */

$text-colors: (
  "foreground-base",
  "foreground-dark",
) !default;

/* Background colors */

$background-colors: (
  "background-base",
  "background-dark",
) !default;

/* Fonts families  */

$font-families: (
  "primary": (
    helvetica,
    arial,
    sans-serif,
  ),
) !default;

/* Font weights */

$font-weights: (
  "normal": 400,
) !default;

/* Nav */

$nav: (
  "icon": (
    "width": 40px,
    "line-width": 2px,
    "margin": 8px,
  )
) !default;

/* Breakpoints */

$breakpoints: (
  "xs": 400px,
  "s": 600px,
  "r": 800px,
  "m": 900px,
  "l": 1000px,
) !default;

/* Containers and padding */

$containers: ( "default": 1300px ) !default;
$container-padding: 20px !default;

/* Append to breakpoints */

@each $c, $width in $containers {
  $suffix: "";

  @if $c != "default" {
    $suffix: "-#{$c}";
  }

  $breakpoints: map.merge(("container#{$suffix}": $width ), $breakpoints);
  $breakpoints: map.merge(("container#{$suffix}-with-padding": $width + ($container-padding * 2)), $breakpoints);
}

/* Spacing */

$spacing: (
  "s": 8px,
  "m": 16px,
  "l": 24px,
) !default;

/* Widths */

$width-percentages: (
  "4-5": 80%,
  "3-4": 75%,
  "2-3": 66.667%,
  "3-5": 60%,
  "1-2": 50%,
  "2-5": 40%,
  "1-3": 33.333%,
  "1-4": 25%,
  "1-5": 20%
) !default;
$width-percentage-breakpoints: ("s", "m") !default;
$widths: () !default;
$width-breakpoints: () !default;
$max-widths: () !default;
$max-width-breakpoints: () !default;

/* Heights */

$heights: () !default;
$height-breakpoints: () !default;

/* Padding */

$padding-top: () !default;
$padding-bottom: () !default;
$padding-vertical-breakpoints: ("l") !default;
$padding-left: () !default;
$padding-right: () !default;
$padding-horizontal-breakpoints: () !default;

/* Margin */

$margin-top: () !default;
$margin-bottom: () !default;
$margin-bottom-all: () !default;
$margin-vertical-breakpoints: () !default;
$margin-left: () !default;
$margin-right: () !default;
$margin-horizontal-breakpoints: () !default;

/* Gap */

$gaps: () !default;
$gap-breakpoints: ("l") !default;

/* Flex */

$flex-row-breakpoints: () !default;
$flex-column-breakpoints: () !default;

/* Aspect ratio padding */

$aspect-ratio-padding: () !default;
$aspect-ratio-padding: m.map-recursive-merge(
  (
    "100": 100%
  ),
  $aspect-ratio-padding
);

/* Transitions */

$transitions: () !default;
$transitions: m.map-recursive-merge(
  (
    "default": (
      "prop": (color, background, border-color, opacity, transform),
      "duration": 300ms,
      "easing": "ease-in-out",
      "delay": 0ms,
    ),
  ),
  $transitions
);
$default-prop: map.get($transitions, "default", "prop");
$default-duration: map.get($transitions, "default", "duration");
$default-easing: map.get($transitions, "default", "easing");
$default-delay: map.get($transitions, "default", "delay");

/* Z index */

$z-index: () !default;
$z-index: m.map-recursive-merge(
  (
    "skip-link": 100,
    "page-transition": 100,
    "modal": 90,
    "nav": 85,
    "loader": (
      "default": 80,
      "page": 110
    )
  ),
  $z-index
);

/* Outline */

$outline: () !default;
$outline: m.map-recursive-merge(
  (
    "width": 0.25rem,
    "color": "var(--primary-dark)",
    "offset": 0.25rem,
  ),
  $outline
);

/* Borders */

$borders: () !default;
$borders: m.map-recursive-merge(
  (
    "sides": ("all", "top", "left", "right", "bottom"),
    "colors": (
      "default": currentColor,
    ),
    "widths": (
      "default": 0.125rem,
    ),
  ),
  $borders
);

/* Border radius */

$border-radius: () !default;

/* Placeholders */

$placeholders: () !default;
$placeholders: list.join(
  (
    (
      "name": "overflow-hidden",
      "prop": (
        overflow: hidden
      )
    ),
    (
      "name": "overflow-x-hidden",
      "prop": (
        overflow-x: hidden
      )
    ),
    (
      "name": "overflow-y-hidden",
      "prop": (
        overflow-y: hidden
      )
    ),
    (
      "name": "overflow-scroll",
      "prop": (
        overflow: scroll
      )
    ),
    (
      "name": "overflow-x-scroll",
      "prop": (
        overflow-x: scroll
      )
    ),
    (
      "name": "overflow-y-scroll",
      "prop": (
        overflow-y: scroll
      )
    ),
    (
      "name": "overflow-auto",
      "prop": (
        overflow: auto
      )
    ),
    (
      "name": "overflow-x-auto",
      "prop": (
        overflow-x: auto
      )
    ),
    (
      "name": "overflow-y-auto",
      "prop": (
        overflow-y: auto
      )
    ),
    (
      "name": "float-left",
      "prop": (
        float: left
      )
    ),
    (
      "name": "float-right",
      "prop": (
        float: right
      )
    ),
    (
      "name": "clear-both",
      "prop": (
        clear: both
      )
    ),
    (
      "name": "display-none",
      "prop": (
        display: none
      )
    ),
    (
      "name": "display-block",
      "prop": (
        display: block
      )
    ),
    (
      "name": "display-inline-block",
      "prop": (
        display: inline-block
      )
    ),
    (
      "name": "display-flex",
      "prop": (
        display: flex
      )
    ),
    (
      "name": "display-inline-flex",
      "prop": (
        display: inline-flex
      )
    ),
    (
      "name": "display-table",
      "prop": (
        display: table
      )
    ),
    (
      "name": "display-table-row",
      "prop": (
        display: table-row
      )
    ),
    (
      "name": "display-table-cell",
      "prop": (
        display: table-cell
      )
    ),
    (
      "name": "flex-shrink-0",
      "prop": (
        flex-shrink: 0
      )
    ),
    (
      "name": "flex-grow-1",
      "prop": (
        flex-grow: 1
      )
    ),
    (
      "name": "flex-direction-column",
      "prop": (
        flex-direction: column
      )
    ),
    (
      "name": "flex-direction-row",
      "prop": (
        flex-direction: row
      )
    ),
    (
      "name": "flex-wrap-wrap",
      "prop": (
        flex-wrap: wrap
      )
    ),
    (
      "name": "justify-content-space-between",
      "prop": (
        justify-content: space-between
      )
    ),
    (
      "name": "justify-content-center",
      "prop": (
        justify-content: center
      )
    ),
    (
      "name": "justify-content-flex-start",
      "prop": (
        justify-content: flex-start
      )
    ),
    (
      "name": "justify-content-flex-end",
      "prop": (
        justify-content: flex-end
      )
    ),
    (
      "name": "align-items-center",
      "prop": (
        align-items: center
      )
    ),
    (
      "name": "align-items-flex-start",
      "prop": (
        align-items: flex-start
      )
    ),
    (
      "name": "align-items-flex-end",
      "prop": (
        align-items: flex-end
      )
    ),
    (
      "name": "visibility-hidden",
      "prop": (
        visibility: hidden
      )
    ),
    (
      "name": "visibility-visible",
      "prop": (
        visibility: visible
      )
    ),
    (
      "name": "content-empty",
      "prop": (
        content: ""
      )
    ),
    (
      "name": "position-relative",
      "prop": (
        position: relative
      )
    ),
    (
      "name": "position-absolute",
      "prop": (
        position: absolute
      )
    ),
    (
      "name": "position-fixed",
      "prop": (
        position: fixed
      )
    ),
    (
      "name": "position-sticky",
      "prop": (
        position: sticky
      )
    ),
    (
      "name": "top-0",
      "prop": (
        top: 0
      )
    ),
    (
      "name": "bottom-0",
      "prop": (
        bottom: 0
      )
    ),
    (
      "name": "left-0",
      "prop": (
        left: 0
      )
    ),
    (
      "name": "right-0",
      "prop": (
        right: 0
      )
    ),
    (
      "name": "z-index-1",
      "prop": (
        z-index: 1
      )
    ),
    (
      "name": "z-index--1",
      "prop": (
        z-index: -1
      )
    ),
    (
      "name": "text-align-left",
      "prop": (
        text-align: left
      )
    ),
    (
      "name": "text-align-right",
      "prop": (
        text-align: right
      )
    ),
    (
      "name": "text-align-center",
      "prop": (
        text-align: center
      )
    ),
    (
      "name": "text-align-justify",
      "prop": (
        text-align: justify
      )
    ),
    (
      "name": "vertical-align-bottom",
      "prop": (
        vertical-align: bottom
      )
    ),
    (
      "name": "vertical-align-middle",
      "prop": (
        vertical-align: middle
      )
    ),
    (
      "name": "vertical-align-top",
      "prop": (
        vertical-align: top
      )
    ),
    (
      "name": "padding-0",
      "prop": (
        padding: 0
      )
    ),
    (
      "name": "margin-0",
      "prop": (
        margin: 0
      )
    ),
    (
      "name": "margin-auto",
      "prop": (
        margin: auto
      )
    ),
    (
      "name": "margin-top-auto",
      "prop": (
        margin-top: auto
      )
    ),
    (
      "name": "margin-bottom-auto",
      "prop": (
        margin-bottom: auto
      )
    ),
    (
      "name": "margin-right-auto",
      "prop": (
        margin-right: auto
      )
    ),
    (
      "name": "margin-left-auto",
      "prop": (
        margin-left: auto
      )
    ),
    (
      "name": "border-radius-100-pc",
      "prop": (
        border-radius: 100%
      )
    ),
    (
      "name": "transform-origin-0-0",
      "prop": (
        transform-origin: 0 0
      )
    ),
    (
      "name": "transform-origin-0-100-pc",
      "prop": (
        transform-origin: 0 100%
      )
    ),
    (
      "name": "transform-origin-100-pc-0",
      "prop": (
        transform-origin: 100% 0
      )
    ),
    (
      "name": "transform-origin-100-pc-100-pc",
      "prop": (
        transform-origin: 100% 100%
      )
    ),
    (
      "name": "opacity-0",
      "prop": (
        opacity: 0
      )
    ),
    (
      "name": "opacity-1",
      "prop": (
        opacity: 1
      )
    ),
    (
      "name": "width-inherit",
      "prop": (
        width: inherit
      )
    ),
    (
      "name": "height-inherit",
      "prop": (
        height: inherit
      )
    ),
    (
      "name": "width-100-pc",
      "prop": (
        width: 100%
      )
    ),
    (
      "name": "width-100-vw",
      "prop": (
        width: 100vw
      )
    ),
    (
      "name": "height-100-pc",
      "prop": (
        height: 100%
      )
    ),
    (
      "name": "height-100-vh",
      "prop": (
        height: 100vh
      )
    ),
    (
      "name": "color-inherit",
      "prop": (
        color: inherit
      )
    ),
    (
      "name": "background-color-inherit",
      "prop": (
        background-color: inherit
      )
    ),
    (
      "name": "background-no-repeat",
      "prop": (
        background-repeat: no-repeat
      )
    ),
    (
      "name": "background-size-cover",
      "prop": (
        background-size: cover
      )
    ),
    (
      "name": "background-size-contain",
      "prop": (
        background-size: contain
      )
    ),
    (
      "name": "background-position-left-top",
      "prop": (
        background-position: left top
      )
    ),
    (
      "name": "background-position-left-center",
      "prop": (
        background-position: left center
      )
    ),
    (
      "name": "background-position-left-bottom",
      "prop": (
        background-position: left bottom
      )
    ),
    (
      "name": "background-position-center-top",
      "prop": (
        background-position: center top
      )
    ),
    (
      "name": "background-position-center-center",
      "prop": (
        background-position: center center
      )
    ),
    (
      "name": "background-position-center-bottom",
      "prop": (
        background-position: center bottom
      )
    ),
    (
      "name": "background-position-right-top",
      "prop": (
        background-position: right top
      )
    ),
    (
      "name": "background-position-right-center",
      "prop": (
        background-position: right center
      )
    ),
    (
      "name": "background-position-right-bottom",
      "prop": (
        background-position: right bottom
      )
    ),
    (
      "name": "object-fit-cover",
      "prop": (
        object-fit: cover
      )
    ),
    (
      "name": "object-fit-contain",
      "prop": (
        object-fit: contain
      )
    ),
    (
      "name": "object-position-left-top",
      "prop": (
        object-position: left top
      )
    ),
    (
      "name": "object-position-left-center",
      "prop": (
        object-position: left center
      )
    ),
    (
      "name": "object-position-left-bottom",
      "prop": (
        object-position: left bottom
      )
    ),
    (
      "name": "object-position-center-top",
      "prop": (
        object-position: center top
      )
    ),
    (
      "name": "object-position-center-center",
      "prop": (
        object-position: center center
      )
    ),
    (
      "name": "object-position-center-bottom",
      "prop": (
        object-position: center bottom
      )
    ),
    (
      "name": "object-position-right-top",
      "prop": (
        object-position: right top
      )
    ),
    (
      "name": "object-position-right-center",
      "prop": (
        object-position: right center
      )
    ),
    (
      "name": "object-position-right-bottom",
      "prop": (
        object-position: right bottom
      )
    ),
  ),
  $placeholders
);

@each $p in $placeholders {
  @include mix.make-placeholder($p);
}

@include mix.set-placeholder("position-vertical-center") {
  top: 50%;
  transform: translateY(-50%);
}

@include mix.set-placeholder("position-horizontal-center") {
  left: 50%;
  transform: translateX(-50%);
}

@include mix.set-placeholder("visually-hidden") {
  @extend %u-position-absolute;
  @extend %u-overflow-hidden;

  width: 0.0625rem;
  height: 0.0625rem;
  margin: -0.0625rem;
  clip: rect(0, 0, 0, 0);
}

@include mix.set-placeholder("touch-50") {
  &::before {
    @extend %u-content-empty;
    @extend %u-position-absolute;

    transform: translate(-50%, -50%);
    width: 3.125rem;
    height: 3.125rem;
    top: 50%;
    left: 50%;
  }
}

@each $k, $v in $font-families {
  @include mix.set-placeholder("font-family-#{$k}") {
    font-family: $v;
  }
}

@each $k, $v in $font-weights {
  @include mix.set-placeholder("font-weight-#{$k}") {
    font-weight: $v;
  }
}

@each $name, $value in $colors-flat-prefix {
  @include mix.set-placeholder($name) {
    color: $value;
  }

  @include mix.set-placeholder("background-#{$name}") {
    background-color: $value;
  }

  @include mix.set-placeholder("fill-#{$name}") {
    fill: $value;
  }

  @include mix.set-placeholder("border-#{$name}") {
    border-color: $value;
  }
}
