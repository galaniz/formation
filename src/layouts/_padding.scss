/**
 * Layouts: padding
 */

/* Imports */

@use "sass:list";
@use "sass:string";
@use "../config" as con;
@use "../utils/mixins" as mix;
@use "../utils/functions" as func;

/* Defaults */

.l-padding-0 {
  @extend %u-padding-0;
}

/* Config padding */

@each $p, $v in con.$padding-top {
  .l-padding-top-#{$p} {
    padding-top: #{func.calc-rem($v)};
  }
}

@each $p, $v in con.$padding-bottom {
  .l-padding-bottom-#{$p} {
    padding-bottom: #{func.calc-rem($v)};
  }
}

@each $b in con.$padding-vertical-breakpoints {
  @include mix.breakpoint-min($b) {
    @each $p, $v in con.$padding-top {
      .l-padding-top-#{$p}-#{$b} {
        padding-top: #{func.calc-rem($v)};
      }
    }

    @each $p, $v in con.$padding-bottom {
      .l-padding-bottom-#{$p}-#{$b} {
        padding-bottom: #{func.calc-rem($v)};
      }
    }
  }
}

@each $p, $v in con.$padding-left {
  .l-padding-left-#{$p} {
    padding-left: #{func.calc-rem($v)};
  }
}

@each $p, $v in con.$padding-right {
  .l-padding-right-#{$p} {
    padding-right: #{func.calc-rem($v)};
  }
}

@each $b in con.$padding-horizontal-breakpoints {
  @include mix.breakpoint-min($b) {
    @each $p, $v in con.$padding-left {
      .l-padding-left-#{$p}-#{$b} {
        padding-left: #{func.calc-rem($v)};
      }
    }

    @each $p, $v in con.$padding-right {
      .l-padding-right-#{$p}-#{$b} {
        padding-right: #{func.calc-rem($v)};
      }
    }
  }
}
