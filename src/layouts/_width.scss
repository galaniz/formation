/**
 * Layouts - width
 */

/* Imports */

@use "../config" as con;
@use "../utils/mixins" as mix;

/* Relative units */

.l-width-100-pc {
  @extend %u-width-100-pc;
}

.l-width-100-vw {
  @extend %u-width-100-vw;
}

/* Config widths */

@each $w in con.$widths {
  .l-width-#{$w} {
    width: var(--#{$w});
  }
}

@each $b in con.$width-breakpoints {
  @include mix.breakpoint-min($b) {
    @each $w in con.$widths {
      .l-width-#{$w}-#{$b} {
        width: var(--#{$w});
      }
    }
  }
}

@each $w, $v in con.$width-percentages {
  .l-width-#{$w} {
    width: $v;
  }
}

@each $b in con.$width-percentage-breakpoints {
  @include mix.breakpoint-min($b) {
    @each $w, $v in con.$width-percentages {
      .l-width-#{$w}-#{$b} {
        width: $v;
      }
    }
  }
}

@each $w in con.$max-widths {
  .l-max-width-#{$w} {
    max-width: var(--#{$w});
  }
}

@each $b in con.$max-width-breakpoints {
  @include mix.breakpoint-min($b) {
    @each $w in con.$max-widths {
      .l-max-width-#{$w}-#{$b} {
        max-width: var(--#{$w});
      }
    }
  }
}
