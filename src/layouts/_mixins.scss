
/*
 * Imports
 * -------
 */

@use 'sass:meta';
@use '../utils/functions' as func;
@use '../utils/mixins' as mix;

/*
 * Make container classes with breakpoints
 * ---------------------------------------
 */

@mixin makeContainers( $containers, $containerPadding ) {
	%u-margin-padding-0 {
		&[data-left] {
			margin-left: 0;
			padding-left: 0;
		}
		
		&[data-right] {
			margin-right: 0;
			padding-right: 0;
		}
	}

	@each $c, $width in $containers {
		$k: meta.inspect( $c );
		$d: '';
		$suffix: '';

		@if $k != 'def' {
			$d: '-';
			$suffix: func.capitalize( $c );
		} @else {
			$k: '';
		}

		.l-container#{ $d }#{ $k } {
			@extend %u-margin-right-auto;
			@extend %u-margin-left-auto;
			@extend %u-margin-padding-0;
			max-width: func.calcRem( $width + ( $containerPadding * 2 ) );
			padding-left: func.calcRem( $containerPadding );
			padding-right: func.calcRem( $containerPadding );
		}
	}
}

/*
 * Make grid classes with breakpoints
 * ----------------------------------
 */

@mixin makeGrid( $grid, $gridOverwrite ) {
	.l-100 {
		@extend %u-width-100;
	}

	$grid: $grid;

	@if meta.type-of( $gridOverwrite ) == map {
		$grid: $gridOverwrite;
	} 

	@each $g, $v in $grid {
		.l-#{ $g } {
			@extend %u-width-100;
			
			@each $bk, $width in $v {
				@include mix.breakpointMin( $bk ) {
					width: $width;
				}
			}
		}
	}
}
